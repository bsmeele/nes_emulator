START:
// 0 * 35
	LDA #0x00
	STA 0x00
	LDA #0x23
	STA 0x01
	LDX #0x00
	JSR MULT_START
// 6 * 0
	LDA #0x06
	STA 0x03
	LDA #0x00
	STA 0x04
	LDX #0x03
	JSR MULT_START
// 6 * 35
	LDA #0x06
	STA 0x06
	LDA #0x23
	STA 0x07
	LDX #0x06
	JSR MULT_START
// 0 / 8
	LDA #0x00
	STA 0x09
	LDA #0x08
	STA 0x0A
	LDX #0x09
	JSR DIV_START
// 210 / 0
	LDA #0xD2
	STA 0x0D
	LDA #0x00
	STA 0x0E
	LDX #0x0D
	JSR DIV_START
// 210 / 8
	LDA #0xD2
	STA 0x11
	LDA #0x08
	STA 0x12
	LDX #0x11
	JSR DIV_START
// 210 / 7
	LDA #0xD2
	STA 0x15
	LDA #0x07
	STA 0x16
	LDX #0x15
	JSR DIV_START
END:
	BRK
MULT_START:
	LDA #0x00
	CMP 0x00,X
	BEQ MULT_END
	CMP 0x01,X
	BEQ MULT_END
MULT_LOOP:
	ADC 0x00,X
	DEC 0x01,X
	BNE MULT_LOOP
MULT_END:
	STA 0x02,X
	RTS
DIV_START:
	LDA #0x00
	STA 0x02,X
	STA 0x03,X
	CMP 0x00,X
	BEQ DIV_END
	CMP 0x01,X
	BEQ DIV_0
	LDA 0x00,X
	SEC
DIV_LOOP:
	SBC 0x01,X
	BCC DIV_REMAINDER
	INC 0x02,X
	BCS DIV_LOOP
DIV_0:
	LDA #0xFF
	STA 0x02,X
	SEC
	BCS DIV_END
DIV_REMAINDER:
	ADC 0x01,X
	STA 0x03,X
DIV_END:
	RTS
